---
import Button from "@components/ui/Button.astro";
import DotBackground from "@components/ui/DotBackground.astro";
import SectionTitle from "@components/ui/SectionTitle.astro";
import { Icon } from "astro-icon/components";
import { getCollection } from "astro:content";

const posts = await getCollection("blog");

function getLocalDate(date: string) {
  const d = new Date(date);
  return d.toLocaleDateString("default", {
    month: "short",
    day: "numeric",
    year: "numeric",
  });
}
---

<writing-section class="flex flex-col gap-8 relative">
  <div class="relative">
    <DotBackground classes="-top-[120px]" />
  </div>

  <SectionTitle> Articles </SectionTitle>

  <div class="flex flex-col lg:grid grid-cols-2 gap-4 lg:gap-6">
    {
      posts
        .sort(
          (a, b) =>
            new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
        )
        .slice(0, 6)
        .map((post) => (
          <a
            href={post.data.link}
            target="_blank"
            class="flex flex-col gap-3 p-4 transparent-card fade-in-card"
          >
            <h2 class="text-xl leading-7 font-extrabold flex-1 line-clamp-2 underline underline-offset-2">
              {post.data.title}
            </h2>
            <div class="flex text-secondary">
              <p class="flex-1">{post.data.platform}</p>
              <p class="text-sm">{getLocalDate(post.data.date)}</p>
            </div>
          </a>
        ))
    }

    <a
      href="https://blog.jomaendle.com/"
      rel="noopener noreferrer"
      target="_blank"
      class="fade-in-card"
    >
      <Button variant="tertiary" size="medium">
        <div class="flex items-center gap-2">
          Read all blog articles

          <span class="text-xl -rotate-45">&rarr;</span>
        </div>
      </Button>
    </a>
  </div>
</writing-section>

<script>
  class WritingSection extends HTMLElement {
    constructor() {
      super();

      const dotBg = this.children[0].children[0] as HTMLElement | null;

      if (!dotBg) return;

      dotBg.style.height = this.clientHeight + this.clientHeight * 0.3 + "px";
    }
  }

  customElements.define("writing-section", WritingSection);
</script>
